version: '{branch}-{build}'
skip_non_tags: true
image: Visual Studio 2022

environment:
  QT6_VERSION: 6.9.1
  Qt5_INSTALL_DIR: C:\Qt\5.15.2\msvc2019

# Build matrix con due configurazioni: Qt5 32bit e Qt6 64bit
for:
-
  matrix:
    only:
      - job_name: Qt5-32bit
  environment:
    QT_VERSION: 5
    ARCH: x86
    QT_INSTALL_DIR: C:\Qt\5.15.2\msvc2019
    CMAKE_FLAGS: ""
    CPACK_FLAGS: "-G ZIP -B package"

-
  matrix:
    only:
      - job_name: Qt6-64bit
  environment:
    QT_VERSION: 6
    ARCH: x64
    QT_INSTALL_DIR: C:\Qt\qt%QT6_VERSION%
    CMAKE_FLAGS: "-DUSE_QT6=yes"
    CPACK_FLAGS: ""

install:
- ps: |
    # Setup Qt
    if ($env:QT_VERSION -eq "6") {
      $qtZip = "qt$env:QT6_VERSION-windows-msvc2019_64.zip"
      $qtUrl = "https://download.qt.io/official_releases/qt/$($env:QT6_VERSION.Substring(0,3))/$env:QT6_VERSION/$qtZip"
      Write-Host "Downloading Qt6 from $qtUrl"
      curl -LO $qtUrl
      7z x $qtZip -oC:\Qt
      #$env:PATH = "C:\Qt\qt$env:QT6_VERSION\bin;$env:PATH"
    } else {
      #$env:PATH += ";$env:QT_INSTALL_DIR\bin"
    }

    # Scarica ImageMagick (32-bit per Qt5, 64-bit per Qt6)
    $gitTags = git ls-remote --sort="version:refname" --tags https://github.com/ImageMagick/ImageMagick.git
    $lastTagLine = $gitTags[-1]
    $lastTagVersion = $lastTagLine -replace '.*refs/tags/(.*)', '$1'
    Write-Host "---`nLatest ImageMagick Version Found: $lastTagVersion`n---"

    if ($env:ARCH -eq "x64") {
      $imArch = "x64"
    } else {
      $imArch = "x86"
    }

    $imUrl = "https://imagemagick.org/archive/binaries/ImageMagick-$lastTagVersion-Q16-HDRI-$imArch-dll.exe"
    Write-Host "Downloading ImageMagick from $imUrl"
    Invoke-WebRequest -Uri $imUrl -OutFile ImageMagick-Installer.exe

    Start-Process -FilePath ".\ImageMagick-Installer.exe" -ArgumentList "/MERGETASKS=install_devel", "/VERYSILENT", "/DIR=C:\projects\ImageMagick" -NoNewWindow -Wait

build_script:
- ps: >-
    $env:PATH += ";C:\Qt\qt$env:$QT6_VERSION\bin;$QT_INSTALL_DIR\bin"

    echo "PATH: $env:PATH"
    echo "QT_INSTALL_DIR: $QT_INSTALL_DIR"
    echo "QT6_VERSION: $QT6_VERSION"

- cmd: >-
    call "C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\Tools\VsDevCmd.bat"

    cd C:\projects\converseen

    mkdir build

    cd build

    cmake -G "NMake Makefiles" -DCMAKE_BUILD_TYPE:STRING=Release -DImageMagick_EXECUTABLE_DIR="C:\projects\ImageMagick" %CMAKE_FLAGS% ..

    nmake

    if NOT "%CPACK_FLAGS%"=="" (
      cpack %CPACK_FLAGS%
    ) else (
      cpack
    )

    mkdir artifact

    if exist package\*.msi copy package\*.msi artifact\.

    if exist package\*.zip copy package\*.zip artifact\.

    7z a -tzip artifact.zip artifact\

artifacts:
- path: build/artifact.zip
  name: artifact



#deploy:
#- provider: Webhook
#  url: https://app.signpath.io/API/v1/71fbb5b8-055f-4882-ae15-f3a8a2951f83/Integrations/AppVeyor?ProjectSlug=Converseen&SigningPolicySlug=release-signing&ArtifactConfigurationSlug=initial
#  # url: https://app.signpath.io/API/v1/71fbb5b8-055f-4882-ae15-f3a8a2951f83/Integrations/AppVeyor?ProjectSlug=Converseen&SigningPolicySlug=test-signing&ArtifactConfigurationSlug=initial
#  authorization:
#     secure: YoYalnXJBOqOYvwfVK1CtgGyCk5oeNQNyr+8ru9xjnEbydKxGokat+WO47aGhq6vaT0tx0cWUZBTJYwsaVmWbA==
